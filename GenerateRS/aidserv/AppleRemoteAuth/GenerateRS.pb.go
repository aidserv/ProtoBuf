// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.6
// source: GenerateRS.proto

package AppleRemoteAuth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request GenerateRS message
type RemoteDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RqData          []byte `protobuf:"bytes,1,opt,name=rq_data,json=rqData,proto3" json:"rq_data,omitempty"`
	RqSigData       []byte `protobuf:"bytes,2,opt,name=rq_sig_data,json=rqSigData,proto3" json:"rq_sig_data,omitempty"`
	GrappaSessionId uint32 `protobuf:"varint,3,opt,name=grappa_session_id,json=grappaSessionId,proto3" json:"grappa_session_id,omitempty"`
	// bytes key_fair_play_guid=4;
	FairPlayCertificate []byte `protobuf:"bytes,5,opt,name=fair_play_certificate,json=fairPlayCertificate,proto3" json:"fair_play_certificate,omitempty"`
	FairDeviceType      int64  `protobuf:"varint,6,opt,name=fair_device_type,json=fairDeviceType,proto3" json:"fair_device_type,omitempty"`
	// uint32 private_key=7;
	FairPlayGuid          string `protobuf:"bytes,8,opt,name=fair_play_guid,json=fairPlayGuid,proto3" json:"fair_play_guid,omitempty"`
	Grappa                []byte `protobuf:"bytes,9,opt,name=grappa,proto3,oneof" json:"grappa,omitempty"`
	Dsid                  *int64 `protobuf:"varint,10,opt,name=dsid,proto3,oneof" json:"dsid,omitempty"`
	KeyTypeSupportVersion *int64 `protobuf:"varint,11,opt,name=keyTypeSupportVersion,proto3,oneof" json:"keyTypeSupportVersion,omitempty"`
}

func (x *RemoteDeviceInfo) Reset() {
	*x = RemoteDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDeviceInfo) ProtoMessage() {}

func (x *RemoteDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDeviceInfo.ProtoReflect.Descriptor instead.
func (*RemoteDeviceInfo) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteDeviceInfo) GetRqData() []byte {
	if x != nil {
		return x.RqData
	}
	return nil
}

func (x *RemoteDeviceInfo) GetRqSigData() []byte {
	if x != nil {
		return x.RqSigData
	}
	return nil
}

func (x *RemoteDeviceInfo) GetGrappaSessionId() uint32 {
	if x != nil {
		return x.GrappaSessionId
	}
	return 0
}

func (x *RemoteDeviceInfo) GetFairPlayCertificate() []byte {
	if x != nil {
		return x.FairPlayCertificate
	}
	return nil
}

func (x *RemoteDeviceInfo) GetFairDeviceType() int64 {
	if x != nil {
		return x.FairDeviceType
	}
	return 0
}

func (x *RemoteDeviceInfo) GetFairPlayGuid() string {
	if x != nil {
		return x.FairPlayGuid
	}
	return ""
}

func (x *RemoteDeviceInfo) GetGrappa() []byte {
	if x != nil {
		return x.Grappa
	}
	return nil
}

func (x *RemoteDeviceInfo) GetDsid() int64 {
	if x != nil && x.Dsid != nil {
		return *x.Dsid
	}
	return 0
}

func (x *RemoteDeviceInfo) GetKeyTypeSupportVersion() int64 {
	if x != nil && x.KeyTypeSupportVersion != nil {
		return *x.KeyTypeSupportVersion
	}
	return 0
}

// The response GenerateRS message
type Rsdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsData    []byte `protobuf:"bytes,1,opt,name=rs_data,json=rsData,proto3" json:"rs_data,omitempty"`
	Ret       bool   `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`
	RsSigData []byte `protobuf:"bytes,3,opt,name=rs_sig_data,json=rsSigData,proto3,oneof" json:"rs_sig_data,omitempty"`
}

func (x *Rsdata) Reset() {
	*x = Rsdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rsdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rsdata) ProtoMessage() {}

func (x *Rsdata) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rsdata.ProtoReflect.Descriptor instead.
func (*Rsdata) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{1}
}

func (x *Rsdata) GetRsData() []byte {
	if x != nil {
		return x.RsData
	}
	return nil
}

func (x *Rsdata) GetRet() bool {
	if x != nil {
		return x.Ret
	}
	return false
}

func (x *Rsdata) GetRsSigData() []byte {
	if x != nil {
		return x.RsSigData
	}
	return nil
}

// The response GenerateGrappa message
type Grappa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrappaData      []byte `protobuf:"bytes,1,opt,name=grappaData,proto3" json:"grappaData,omitempty"`
	GrappaSessionId uint32 `protobuf:"varint,2,opt,name=grappa_session_id,json=grappaSessionId,proto3" json:"grappa_session_id,omitempty"`
	Ret             bool   `protobuf:"varint,3,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *Grappa) Reset() {
	*x = Grappa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grappa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grappa) ProtoMessage() {}

func (x *Grappa) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grappa.ProtoReflect.Descriptor instead.
func (*Grappa) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{2}
}

func (x *Grappa) GetGrappaData() []byte {
	if x != nil {
		return x.GrappaData
	}
	return nil
}

func (x *Grappa) GetGrappaSessionId() uint32 {
	if x != nil {
		return x.GrappaSessionId
	}
	return 0
}

func (x *Grappa) GetRet() bool {
	if x != nil {
		return x.Ret
	}
	return false
}

// The request GenerateGrappa message
type RqGeneGrappa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Udid string `protobuf:"bytes,1,opt,name=udid,proto3" json:"udid,omitempty"`
}

func (x *RqGeneGrappa) Reset() {
	*x = RqGeneGrappa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqGeneGrappa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqGeneGrappa) ProtoMessage() {}

func (x *RqGeneGrappa) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqGeneGrappa.ProtoReflect.Descriptor instead.
func (*RqGeneGrappa) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{3}
}

func (x *RqGeneGrappa) GetUdid() string {
	if x != nil {
		return x.Udid
	}
	return ""
}

// the scinfo
type Scinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appleid      string `protobuf:"bytes,1,opt,name=appleid,proto3" json:"appleid,omitempty"`
	Dsid         int64  `protobuf:"varint,2,opt,name=dsid,proto3" json:"dsid,omitempty"`
	HardwareInfo []byte `protobuf:"bytes,3,opt,name=hardwareInfo,proto3" json:"hardwareInfo,omitempty"`
	Sidb         []byte `protobuf:"bytes,4,opt,name=sidb,proto3" json:"sidb,omitempty"`
	Sidd         []byte `protobuf:"bytes,5,opt,name=sidd,proto3" json:"sidd,omitempty"`
}

func (x *Scinfo) Reset() {
	*x = Scinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scinfo) ProtoMessage() {}

func (x *Scinfo) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scinfo.ProtoReflect.Descriptor instead.
func (*Scinfo) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{4}
}

func (x *Scinfo) GetAppleid() string {
	if x != nil {
		return x.Appleid
	}
	return ""
}

func (x *Scinfo) GetDsid() int64 {
	if x != nil {
		return x.Dsid
	}
	return 0
}

func (x *Scinfo) GetHardwareInfo() []byte {
	if x != nil {
		return x.HardwareInfo
	}
	return nil
}

func (x *Scinfo) GetSidb() []byte {
	if x != nil {
		return x.Sidb
	}
	return nil
}

func (x *Scinfo) GetSidd() []byte {
	if x != nil {
		return x.Sidd
	}
	return nil
}

// The response  scinfo
type Rsscinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret bool `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *Rsscinfo) Reset() {
	*x = Rsscinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GenerateRS_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rsscinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rsscinfo) ProtoMessage() {}

func (x *Rsscinfo) ProtoReflect() protoreflect.Message {
	mi := &file_GenerateRS_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rsscinfo.ProtoReflect.Descriptor instead.
func (*Rsscinfo) Descriptor() ([]byte, []int) {
	return file_GenerateRS_proto_rawDescGZIP(), []int{5}
}

func (x *Rsscinfo) GetRet() bool {
	if x != nil {
		return x.Ret
	}
	return false
}

var File_GenerateRS_proto protoreflect.FileDescriptor

var file_GenerateRS_proto_rawDesc = []byte{
	0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x53, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x22, 0x9a, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x71, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x71, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x71, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x71, 0x53, 0x69, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x72,
	0x61, 0x70, 0x70, 0x61, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x66, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x66, 0x61,
	0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x69,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x61, 0x69, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x06, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x64, 0x73, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04,
	0x64, 0x73, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x6b, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x15, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x64, 0x73, 0x69, 0x64, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6b, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x68, 0x0a, 0x06, 0x72, 0x73, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x73,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x72, 0x73,
	0x53, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72,
	0x73, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x06, 0x47, 0x72,
	0x61, 0x70, 0x70, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x67, 0x72, 0x61, 0x70, 0x70, 0x61, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x72, 0x71, 0x47, 0x65, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70,
	0x70, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x64, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x73, 0x63, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x73, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x69, 0x64, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x69, 0x64, 0x64, 0x22, 0x1c, 0x0a, 0x08, 0x72,
	0x73, 0x73, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72, 0x65, 0x74, 0x32, 0xe3, 0x01, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x4a, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x53, 0x12,
	0x21, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x17, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x2e, 0x72, 0x73, 0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x70, 0x61, 0x12,
	0x1d, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x2e, 0x72, 0x71, 0x47, 0x65, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x70, 0x61, 0x1a, 0x17,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x2e, 0x47, 0x72, 0x61, 0x70, 0x70, 0x61, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x73, 0x63, 0x69, 0x6e,
	0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x2e, 0x72, 0x73, 0x73, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42,
	0x19, 0x5a, 0x17, 0x61, 0x69, 0x64, 0x73, 0x65, 0x72, 0x76, 0x2f, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_GenerateRS_proto_rawDescOnce sync.Once
	file_GenerateRS_proto_rawDescData = file_GenerateRS_proto_rawDesc
)

func file_GenerateRS_proto_rawDescGZIP() []byte {
	file_GenerateRS_proto_rawDescOnce.Do(func() {
		file_GenerateRS_proto_rawDescData = protoimpl.X.CompressGZIP(file_GenerateRS_proto_rawDescData)
	})
	return file_GenerateRS_proto_rawDescData
}

var file_GenerateRS_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_GenerateRS_proto_goTypes = []interface{}{
	(*RemoteDeviceInfo)(nil), // 0: AppleRemoteAuth.RemoteDeviceInfo
	(*Rsdata)(nil),           // 1: AppleRemoteAuth.rsdata
	(*Grappa)(nil),           // 2: AppleRemoteAuth.Grappa
	(*RqGeneGrappa)(nil),     // 3: AppleRemoteAuth.rqGeneGrappa
	(*Scinfo)(nil),           // 4: AppleRemoteAuth.scinfo
	(*Rsscinfo)(nil),         // 5: AppleRemoteAuth.rsscinfo
}
var file_GenerateRS_proto_depIdxs = []int32{
	0, // 0: AppleRemoteAuth.aid.GenerateRS:input_type -> AppleRemoteAuth.RemoteDeviceInfo
	3, // 1: AppleRemoteAuth.aid.GenerateGrappa:input_type -> AppleRemoteAuth.rqGeneGrappa
	4, // 2: AppleRemoteAuth.aid.UploadScinfo:input_type -> AppleRemoteAuth.scinfo
	1, // 3: AppleRemoteAuth.aid.GenerateRS:output_type -> AppleRemoteAuth.rsdata
	2, // 4: AppleRemoteAuth.aid.GenerateGrappa:output_type -> AppleRemoteAuth.Grappa
	5, // 5: AppleRemoteAuth.aid.UploadScinfo:output_type -> AppleRemoteAuth.rsscinfo
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_GenerateRS_proto_init() }
func file_GenerateRS_proto_init() {
	if File_GenerateRS_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GenerateRS_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GenerateRS_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rsdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GenerateRS_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grappa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GenerateRS_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqGeneGrappa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GenerateRS_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GenerateRS_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rsscinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_GenerateRS_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_GenerateRS_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GenerateRS_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_GenerateRS_proto_goTypes,
		DependencyIndexes: file_GenerateRS_proto_depIdxs,
		MessageInfos:      file_GenerateRS_proto_msgTypes,
	}.Build()
	File_GenerateRS_proto = out.File
	file_GenerateRS_proto_rawDesc = nil
	file_GenerateRS_proto_goTypes = nil
	file_GenerateRS_proto_depIdxs = nil
}
